AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  _api

  Sample SAM Template for _api

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Environment:
      Variables:
        ALLOW_ORIGIN: http://localhost:5173
    CodeUri: src/
    Runtime: nodejs18.x
    Architectures:
      - x86_64
  Api:
    Cors:
      AllowMethods: "'GET,POST,DELETE,OPTIONS'"
      AllowHeaders: "'content-type'"
      AllowOrigin: "'http://localhost:5173'"

Resources:
  GetNFTsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: get-nfts.lambdaHandler
      Events:
        ApiGatewayEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
      Role: !GetAtt ExecutionRole.Arn
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - get-nfts.ts
  PremintFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: premint.lambdaHandler
      Events:
        ApiGatewayEvent:
          Type: Api
          Properties:
            Path: /premint
            Method: post
      Role: !GetAtt ExecutionRole.Arn
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: "es2020"
        Sourcemap: true
        EntryPoints:
          - premint.ts
  SpacerBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: spacer-bucket
  ExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-policty
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetObjectAttributes
                Resource: arn:aws:s3:::spacer-bucket/*
